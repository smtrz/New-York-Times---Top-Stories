apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'
android {
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/atomicfu.kotlin_module'
    }
    compileSdkVersion 28
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.task.nytimes"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

   /* kotlinOptions{
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }*/
}

dependencies {
    implementation 'androidx.viewpager:viewpager:1.0.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'

    def support_library_version = '28.0.0'
    def room_version = "2.0.0"
    def lifecycle_version = "2.0.0"
//    def coroutine_version = "1.4.1"
    def coroutine_version = "1.3.8"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation "com.android.support:design:$support_library_version"
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"
/*


    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"
    // use -ktx for Kotlin
    // alternatively - just LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // alternatively - Lifecycles only (no ViewModel or LiveData).
    //     Support library depends on this lightweight import
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    //  implementation "android.arch.paging:runtime:$paging_version"
    // use kapt for Kotlin
    // alternately - if using Java8, use the following instead of compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"

    implementation "androidx.room:room-runtime:$room_version"
    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"
*/
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation "org.mockito:mockito-android:2.28.2"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.0'
    implementation 'com.squareup.okhttp3:okhttp:3.8.0'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation "com.google.dagger:dagger:2.23.2"

    kapt "com.google.dagger:dagger-compiler:2.23.2"
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"
    androidTestImplementation "android.arch.core:core-testing:$lifecycle_version"

    //test
    // Jetpack, Viewmodel, Coroutine, Hilt
    //def lifecycle_version = "2.2.0"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"

    // Dagger Hilt
  /*  implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"
*/
    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:2.2.5"
    //Room Database
    implementation 'androidx.room:room-runtime:2.2.5'
    kapt  'androidx.room:room-compiler:2.2.5'

// ViewModel
//    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
}
